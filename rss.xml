<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[rafael.do]]></title><description><![CDATA[My personal site.]]></description><link>https://rafael.do/</link><generator>RSS for Node</generator><lastBuildDate>Mon, 23 Apr 2018 06:26:27 GMT</lastBuildDate><item><title><![CDATA[Fix “UNPROTECTED PRIVATE KEY FILE” on MacOS Sierra]]></title><description><![CDATA[After I upgraded from Mac OS X “El Capitan” to MacOS Sierra, I started getting the following error when trying to use my SSH keys: Somehow…]]></description><link>https://rafael.do//blog/fix-unprotected-private-key-file-on-macos/</link><guid isPermaLink="false">https://rafael.do//blog/fix-unprotected-private-key-file-on-macos/</guid><pubDate>Thu, 22 Sep 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;After I upgraded from Mac OS X “El Capitan” to MacOS Sierra, I started getting the following error when trying to use my SSH keys:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions 0644 for &amp;#39;/home/foo/.ssh/id_rsa&amp;#39; are too open.
It is recommended that your private key files are NOT accessible by others.
This private key will be ignored.
bad permissions: ignore key: /home/foo/.ssh/id_rsa&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Somehow my SSH keys permissions got messed up. The fix was to simply change their permissions to the &lt;a href=&quot;http://bodhizazen.net/Tutorials/SSH_keys#Login&quot;&gt;recommended&lt;/a&gt; settings:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;chmod 600 ~/.ssh/id_rsa
chmod 600 ~/.ssh/id_rsa.pub&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Lastly, I made sure the private key was added to MacOS’ Keychain:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;ssh-add -K ~/.ssh/id_rsa&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;</content:encoded></item><item><title><![CDATA[Fix Homebrew's Python 2.7.12 --universal on MacOS Sierra]]></title><description><![CDATA[Early adopters of MacOS Sierra like myself are not able to use Homebrew to install Python 2.7.12 with the   flag. This has been reported on…]]></description><link>https://rafael.do//blog/fix-python-2-7-12-on-macos-sierra/</link><guid isPermaLink="false">https://rafael.do//blog/fix-python-2-7-12-on-macos-sierra/</guid><pubDate>Wed, 21 Sep 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Early adopters of MacOS Sierra like myself are not able to use Homebrew to install Python 2.7.12 with the &lt;code class=&quot;language-text&quot;&gt;--universal&lt;/code&gt; flag. This has been reported on &lt;a href=&quot;https://bugs.python.org/issue27806&quot;&gt;Issue 27806: 2.7 32-bit builds fail on macOS 10.12 Sierra due to dependency on deleted header file QuickTime/QuickTime.h&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To fix this, you have to patch Homebrew’s Python build:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;brew edit python&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Add the following lines to your &lt;code class=&quot;language-text&quot;&gt;python.rb&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;patch do
  url &amp;quot;https://bugs.python.org/file44699/issue27806_v3.patch&amp;quot;
  sha256 &amp;quot;fff60cbdb9ff344cd84ea776ea16e940147419c303ab378fb5c7fb3e9053ef0a&amp;quot;
end&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;diff&lt;/code&gt; will look like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;diff --git a/Formula/python.rb b/Formula/python.rb
index b02aef9..55a1a9a 100644
--- a/Formula/python.rb
+++ b/Formula/python.rb
@@ -68,6 +68,11 @@ class Python &amp;lt; Formula
     sha256 &amp;quot;c075353337f9ff3ccf8091693d278782fcdff62c113245d8de43c5c7acc57daf&amp;quot;
   end

+  patch do
+    url &amp;quot;https://bugs.python.org/file44699/issue27806_v3.patch&amp;quot;
+    sha256 &amp;quot;fff60cbdb9ff344cd84ea776ea16e940147419c303ab378fb5c7fb3e9053ef0a&amp;quot;
+  end
+
   def lib_cellar
     prefix/&amp;quot;Frameworks/Python.framework/Versions/2.7/lib/python2.7&amp;quot;
   end&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;You should now be able to install python universally:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;brew install python --universal&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;</content:encoded></item><item><title><![CDATA[Integrating AngularJS with Django]]></title><description><![CDATA[In 3 steps, you can easily setup a single-page application with an  AngularJS  frontend and backed by the  Django Framework : Setup Django…]]></description><link>https://rafael.do//blog/integrating-angularjs-django/</link><guid isPermaLink="false">https://rafael.do//blog/integrating-angularjs-django/</guid><pubDate>Mon, 08 Aug 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;In 3 steps, you can easily setup a single-page application with an &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; frontend and backed by the &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django Framework&lt;/a&gt;:&lt;/p&gt;
&lt;h2&gt;Setup Django&lt;/h2&gt;
&lt;p&gt;On your Django’s &lt;code class=&quot;language-text&quot;&gt;urls.py&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;urlpatterns = patterns(&amp;quot;&amp;quot;,
    (&amp;quot;^admin/&amp;quot;, include(admin.site.urls)),

    # Handle all other URLs via AngularJS.
    url(r&amp;#39;^.*$&amp;#39;, TemplateView.as_view(
      template_name=&amp;quot;index.html&amp;quot;), name=&amp;quot;home&amp;quot;
    ),
)&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3&gt;Mezzanine&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[Optional] If you want to integrate AngularJS with the &lt;a href=&quot;http://mezzanine.jupo.org/&quot;&gt;Django’s Mezzanine CMS&lt;/a&gt;, make sure Mezzanine’s routes are defined &lt;strong&gt;before&lt;/strong&gt; AngularJS’ catch-all “home” route:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;urlpatterns = patterns(&amp;quot;&amp;quot;,
    (&amp;quot;^admin/&amp;quot;, include(admin.site.urls)),

    # Mezzanine pages.
    (&amp;quot;^&amp;quot;, include(&amp;quot;mezzanine.urls&amp;quot;)),

    # Handle all other URLs via AngularJS.
    url(r&amp;#39;^.*$&amp;#39;, TemplateView.as_view(
      template_name=&amp;quot;index.html&amp;quot;), name=&amp;quot;home&amp;quot;
    ),
)&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Setup AngularJS&lt;/h2&gt;
&lt;p&gt;Enable HTML5 Mode in your AngularJS configuration module:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;angular.module(&amp;#39;app&amp;#39;).config(
  function ($routeProvider, locationProvider) {
    $routeProvider
      .when(&amp;#39;/&amp;#39;, {
        templateUrl: &amp;#39;/static/app/views/home.html&amp;#39;,
      })
      .when(&amp;#39;/profile/:profileId&amp;#39;, {
        templateUrl: &amp;#39;/static/app/views/profile.html&amp;#39;,
        controller: &amp;#39;ProfileCtrl&amp;#39;
      })
      .otherwise({
        redirectTo: &amp;#39;/&amp;#39;
      });

      $locationProvider.html5Mode(true);
    });
  }
);&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;This also works with the &lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Setup the HTML&lt;/h2&gt;
&lt;p&gt;Set the &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/HTML/Element/base&quot;&gt;base&lt;/a&gt; tag in your main &lt;code class=&quot;language-text&quot;&gt;index.html&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html class=&amp;quot;no-js&amp;quot; ng-app=&amp;quot;app&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;!-- HTML5 Mode. --&amp;gt;
    &amp;lt;base href=&amp;quot;/&amp;quot;&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;!-- etc --&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;These three steps will enable AngularJS to handle your application’s frontend and Django to take care of the backend. Before deploying to production, make sure you have a proper strategy for serving &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/howto/static-files/deployment/#serving-static-files-in-production&quot;&gt;static files in production&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Read more&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/&quot;&gt;Angular HTML5 mode or pretty URLs on Apache (using htaccess)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[8 tips to become an effective remote developer]]></title><description><![CDATA[For you to evolve as a developer, you need to be a self-starter and make it a point to keep yourself active and in constant state of…]]></description><link>https://rafael.do//blog/8-tips-to-become-an-effective-remote-developer/</link><guid isPermaLink="false">https://rafael.do//blog/8-tips-to-become-an-effective-remote-developer/</guid><pubDate>Thu, 28 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;For you to evolve as a developer, you need to be a self-starter and make it a point to keep yourself active and in constant state of learning. Here are some ways you can do it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.codementor.io/learn-programming/8-tips-to-become-an-effective-remote-developer&quot;&gt;Codementor: 8 Tips to Become an Effective Remote Developer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Response to my interpretation of React's “Design Principles”]]></title><description><![CDATA[Yesterday, I shared  how concerned  I was with React’s
 Design Principles .
Today, I’d like to share the response I received from  @dan…]]></description><link>https://rafael.do//blog/response-to-react-design-principles-interpretation-by-react-members/</link><guid isPermaLink="false">https://rafael.do//blog/response-to-react-design-principles-interpretation-by-react-members/</guid><pubDate>Sat, 16 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;p&gt;Yesterday, I shared &lt;a href=&quot;react-driven-by-facebook-principle-concerns&quot;&gt;how concerned&lt;/a&gt; I was with React’s
&lt;a href=&quot;https://facebook.github.io/react/contributing/design-principles.html&quot;&gt;Design Principles&lt;/a&gt;.
Today, I’d like to share the response I received from &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;@dan_abramov&lt;/a&gt;
—a member of the React team— regarding my interpretation of these principles.&lt;/p&gt;
&lt;p&gt;I hope this helps anyone who felt as conflicted as I did.&lt;/p&gt;
&lt;h2&gt;Response&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; That Facebook heavily uses React in production (unlike Parse) is exactly why I think community can bet on it.&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754278530817617921&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; Community is obviously important but ultimately projects with business value are those that companies keep developing.&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754278857331662848&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; So on the contrary, I think you should have been concerned if Facebook didn&amp;#39;t use React and maintained it for image purposes 😉&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754279261805109248&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; There is also some sort of misunderstanding here. Post says “both externally and internally”. &lt;a href=&quot;https://t.co/ku7DG0j5S0&quot;&gt;pic.twitter.com/ku7DG0j5S0&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754280725076119552&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; “Externally” *is* the community. Sorry if this wasn’t clear. I can change the wording to be more direct.&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754281037891592192&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; I wrote a comment&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754285961845022720&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The comment can be read &lt;a href=&quot;react-driven-by-facebook-principle-concerns#comment-2786435370&quot;&gt;here&lt;/a&gt;.
It’s good stuff.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;About Parse&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;@dan_abramov&lt;/a&gt; Parse servers will be decommissioned in a year and the entire stack was made open source so you can run your own&lt;/p&gt;&amp;mdash; Vjeux (@Vjeux) &lt;a href=&quot;https://twitter.com/Vjeux/status/754317380386304004&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;@dan_abramov&lt;/a&gt; I&amp;#39;ve rarely seen such a graceful shut down of a service before&lt;/p&gt;&amp;mdash; Vjeux (@Vjeux) &lt;a href=&quot;https://twitter.com/Vjeux/status/754317595143049222&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;h2&gt;Closing thoughts&lt;/h2&gt;
&lt;p&gt;
  &lt;img src=&quot;/public/images/blog/2016-07-16/not-even-mad.jpg&quot; height=&quot;185&quot; alt=&quot;That&apos;s amazing.&quot;&gt;
&lt;/p&gt;
&lt;p&gt;I thank &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;@dan_abramov&lt;/a&gt; for taking the time to clarify what they meant.
It certainly didn’t occur to me that they kept an ear to the ground and I could &lt;em&gt;just ask&lt;/em&gt;,
which gives me a sense of relief and quite frankly, makes me &lt;strong&gt;even more&lt;/strong&gt; interested
in the library than I previously was.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/dan_abramov/status/754278530817617921&quot;&gt;Response&lt;/a&gt; on Twitter.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;react-driven-by-facebook-principle-concerns#comment-2786435370&quot;&gt;Response&lt;/a&gt; to my original post.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/pull/7292/files&quot;&gt;Changeset&lt;/a&gt; &lt;em&gt;further&lt;/em&gt; clarifying
the original article.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[React's “Driven by Facebook” principle concerns me]]></title><description><![CDATA[Facebook just released  React Design Principles , an article in which they share a few concepts that guide the library’s development. I was…]]></description><link>https://rafael.do//blog/react-driven-by-facebook-principle-concerns/</link><guid isPermaLink="false">https://rafael.do//blog/react-driven-by-facebook-principle-concerns/</guid><pubDate>Fri, 15 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote class=&quot;bg-warning&quot;&gt;
  &lt;p&gt;
    &lt;b&gt;Update:&lt;/b&gt;
    I&apos;ve posted an &lt;a href=&quot;response-to-react-design-principles-interpretation-by-react-members&quot;&gt;update&lt;/a&gt;
    based on the response I received from &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;a member&lt;/a&gt;
    of the React team. Also, make sure you read his commment &lt;a href=&quot;#comment-2786435370&quot;&gt;below&lt;/a&gt;.
    (2016-07-16)
  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Facebook just released &lt;a href=&quot;https://facebook.github.io/react/contributing/design-principles.html&quot;&gt;React Design Principles&lt;/a&gt;, an article in which they share a few concepts that guide the library’s development. I was feeling assured by the decision-making that drives it, until I was reminded to always keep my chin down and my guard up.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Hot off the press: React Design Principles. We hope that contributors to React will find them useful! &lt;a href=&quot;https://t.co/93wr0tAXSZ&quot;&gt;https://t.co/93wr0tAXSZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; React (@reactjs) &lt;a href=&quot;https://twitter.com/reactjs/status/753677502309072897&quot;&gt;July 14, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;h2&gt;The good&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;React is pragmatic. […] If we want to deprecate a pattern that we don’t like, it is our responsibility to consider all existing use cases for it and educate the community about the alternatives before we deprecate it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It doesn’t get better than this. As a &lt;a href=&quot;https://medium.com/@ericclemmons/javascript-fatigue-48d4011b6fc4&quot;&gt;fatigued developer&lt;/a&gt;, it’s good to know they have my back.&lt;/p&gt;
&lt;h2&gt;The strange&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;We value API stability because at Facebook we have more than 20 thousand components using React. This means that we are reluctant to change public APIs or behavior because teams depend on it both externally and internally.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I found the phrasing in this statement odd, as it can be implied that the reason why the API is stable is almost exclusively because of its internal usage and not because &lt;a href=&quot;http://www.theregister.co.uk/2016/03/23/npm_left_pad_chaos/&quot;&gt;stability matters&lt;/a&gt; to the hundreds of thousands of developers implementing the library. I braced myself.&lt;/p&gt;
&lt;h2&gt;The frightening&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Ultimately React is driven by the needs of Facebook. We are more likely to spend time and energy on issues with React that people using it at Facebook are experiencing internally.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/public/images/blog/2016-07-15/lower-your-expectations.gif&quot; alt=&quot;Lower your expectations&quot;&gt;&lt;/p&gt;
&lt;p&gt;It makes sense that attention is given to ensure their platform provides a pleasant experience to its gigantic user base, while rolling out tools that benefit the rest of the world. However, I was immediately reminded of how shocking it was when they decided to shutdown it’s fantastic “Parse” backend as a service platform and leave a myriad of businesses scrambling for their lives. As &lt;a href=&quot;https://techcrunch.com/2016/01/28/facebook-shutters-its-parse-developer-platform/&quot;&gt;TechChrunch.com&lt;/a&gt; remarked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The situation harkens back to the dark days of developer whiplash on Facebook’s web games platform, circa 2009. Facebook frequently made significant changes to what developers could do and how virality worked with little notice. That left developers with broken apps and lost business potential they were depending on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Let’s ride the wave&lt;/h2&gt;
&lt;p&gt;Am I concerned that Facebook will “move my cheese”? I’m not. React is a wonderful library with a &lt;a href=&quot;javascript-web-frameworks-trends-2016&quot;&gt;growing user base&lt;/a&gt; and I’m invested in it more so than any other out there.&lt;/p&gt;
&lt;p&gt;In spite of this, when I remember the company’s cutthroat history, I read between the lines and understand that that if React’s direction suddenly misaligns with that of the community’s, we played ourselves.&lt;/p&gt;
&lt;p&gt;As George Orwell famously wrote on &lt;a href=&quot;https://www.amazon.com/Animal-Farm-Anniversary-George-Orwell/dp/0451526341/&quot;&gt;“Animal Farm”&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“All animals are equal but some animals are more equal than others”.&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[Introduction to greedy algorithms]]></title><description><![CDATA[{{ page.teaser }} Basic concepts An  optimal solution  is a feasible solution with the largest (or smallest) objective function value. A…]]></description><link>https://rafael.do//blog/introduction-greedy-algorithms/</link><guid isPermaLink="false">https://rafael.do//blog/introduction-greedy-algorithms/</guid><pubDate>Mon, 11 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;{{ page.teaser }}&lt;/p&gt;
&lt;h2&gt;Basic concepts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An &lt;strong&gt;optimal solution&lt;/strong&gt; is a feasible solution with the largest (or smallest) objective function value.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;local optimum&lt;/strong&gt; can be obtained by finding the optimal solution within a neighboring set of candidate solutions.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;global optimum&lt;/strong&gt; can be obtained by finding the optimal solutions among all possible solutions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Problem characteristics&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Greedy choice property&lt;/strong&gt;: a global optimum can be obtained by the selection of a local optimum.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optimal substructure&lt;/strong&gt;: a global optimum can be obtained by using the local optimum of its subproblems.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;General strategies&lt;/h2&gt;
&lt;h3&gt;“Greedy stays ahead” arguments&lt;/h3&gt;
&lt;p&gt;Using “Greedy stays ahead” strategy, the algorithm is always at least as far ahead as the optimal solution of each iteration.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Define your solutions.&lt;/strong&gt; Define what object will represent the global optimum, and what form each local optimum takes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Find a measure.&lt;/strong&gt; Find a series of measurements to ensure your algorithm stays ahead of the local optimums you’ve found.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Proove greedy stays ahead.&lt;/strong&gt; &lt;em&gt;Inductively&lt;/em&gt; show that the local optimums are as good as any of the solution’s measures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Mathematical induction:&lt;/em&gt; a means of proving a theorem by showing that if it is true of any particular case, it is true of the next case in a series, and then showing that it is indeed true in one particular case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Prove optimality.&lt;/strong&gt; By &lt;em&gt;contradiction&lt;/em&gt;, prove that since the algorithm stays ahead of its previous measures, it must produce an optimal solution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Mathematical proof by contradiction:&lt;/em&gt; assume that a statement is not true and then to show that that assumption leads to a contradiction. In the case of trying to prove this is equivalent to assuming that That is, to assume that is true and is false.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Exchange arguments&lt;/h3&gt;
&lt;p&gt;The greedy exchange strategy is used to prove the correctness of greedy algorithms by transforming the global optimum iteratively without worsening its quality.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Define your solutions.&lt;/strong&gt; Define an object &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt; that will represent the global optimum and an object &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; that represents a local optimum.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compare solutions.&lt;/strong&gt; Show that if the global optimum is not the same as the local optimum, either:&lt;/li&gt;
&lt;li&gt;There is an element in &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; that is not in &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;There are two elements of &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; that are in a different order in &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exchange pieces.&lt;/strong&gt; Gradually modify the local optimum &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; until it is the same as the algorithm’s global optimum &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Iterate.&lt;/strong&gt; Decrease the number of differences between &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt;, until you can turn &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt; into &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; without worsening the quality of the solution. Inductively, &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; must be optimal.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Example: Change-making problem&lt;/h2&gt;
&lt;p&gt;This &lt;a href=&quot;https://en.wikipedia.org/wiki/Change-making_problem&quot;&gt;classical problem&lt;/a&gt; addresses the following question: How can a given amount of money be made with the least number of coins of given denominations 1, 5, 10 and 25?&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Input:
  37

Output:
  4

Explanation:
  37 = 25 + 10 + 1 + 1&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Implementation in Python:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def change_making_problem(n):
    count = 0
    for coin in [25, 10, 5, 1]:
        # Largest coin not greater
        # than the remaining amount.
        while n &amp;gt;= coin:
            count += 1
            n -= coin
    return count&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3&gt;Read more&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://web.stanford.edu/class/archive/cs/cs161/cs161.1138/handouts/120%20Guide%20to%20Greedy%20Algorithms.pdf&quot;&gt;Guide to Greedy Algorithms&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.cornell.edu/courses/cs482/2004su/handouts/greedy_ahead.pdf&quot;&gt;Proof Techniques: Greedy Stays Ahead&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.cornell.edu/courses/cs482/2003su/handouts/greedy_exchange.pdf&quot;&gt;Proof Techniques: Greedy Exchange&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[JavaScript web frameworks trends for 2016]]></title><description><![CDATA[Over the past few years, I’ve been building modern web applications using the
 AngularJS  framework.
Despite my interest in this framework…]]></description><link>https://rafael.do//blog/javascript-web-frameworks-trends-2016/</link><guid isPermaLink="false">https://rafael.do//blog/javascript-web-frameworks-trends-2016/</guid><pubDate>Fri, 01 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Over the past few years, I’ve been building modern web applications using the
&lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; framework.
Despite my interest in this framework, I’ve always paid close attention to &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt; and other less popular frameworks.
It’s important to point out that these frameworks are not competing with each other, but rather,
they are tackling the same problem -making the web great again- from different angles.&lt;/p&gt;
&lt;h2&gt;A close look at the worldwide interest in client-side frameworks&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.com/trends/explore#cat=0-5-31&amp;#x26;q=%2Fm%2F0j45p7w%2C%20%2Fm%2F012l1vxv%2C%20%2Fm%2F0t545zt&amp;#x26;date=1%2F2014%2029m&amp;#x26;cmpt=q&amp;#x26;tz=Etc%2FGMT%2B4&quot;&gt;&lt;img src=&quot;/public/images/blog/2016-07-01/trends-worldwide.png&quot; alt=&quot;Worldwide&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;According to &lt;a href=&quot;https://www.google.com/trends/&quot;&gt;Google Trends&lt;/a&gt;, we can see
that the interest in AngularJS is overwhelming in regards to the rest of the pack.
I was quite surprised with these results given how over the past two years, based on
the communities I’m a part of, I would have thought the divide was narrower.&lt;/p&gt;
&lt;p&gt;At this point, I’m surprised that the push React receives from major applications
such as Facebook, Netflix and Airbnb haven’t made it the top framework in terms of interest.&lt;/p&gt;
&lt;p&gt;This also left me wondering if this trend repeated itself by region, so I changed
the scope of my research to specific countries. Let’s find out.&lt;/p&gt;
&lt;h3&gt;United States&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.com/trends/explore#cat=0-5-31&amp;#x26;q=%2Fm%2F0j45p7w%2C%20%2Fm%2F012l1vxv%2C%20%2Fm%2F0t545zt&amp;#x26;geo=US&amp;#x26;date=1%2F2014%2029m&amp;#x26;cmpt=q&amp;#x26;tz=Etc%2FGMT%2B4&quot;&gt;&lt;img src=&quot;/public/images/blog/2016-07-01/trends-us.png&quot; alt=&quot;United States&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The worldwide trend is very representative of the interest within the United States.
If anything, we can see a slight bump in attention to both React and MeteorJS.&lt;/p&gt;
&lt;h3&gt;United Kingdom&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.com/trends/explore#cat=0-5-31&amp;#x26;q=%2Fm%2F0j45p7w%2C%20%2Fm%2F012l1vxv%2C%20%2Fm%2F0t545zt&amp;#x26;geo=GB&amp;#x26;date=1%2F2014%2029m&amp;#x26;cmpt=q&amp;#x26;tz=Etc%2FGMT%2B4&quot;&gt;&lt;img src=&quot;/public/images/blog/2016-07-01/trends-uk.png&quot; alt=&quot;United Kingdom&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Europe presents similar trends to those previously seen, albeit React shows
a less linear increase than the United States. Let’s take a look at Asia.&lt;/p&gt;
&lt;h3&gt;Japan&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.com/trends/explore#cat=0-5-31&amp;#x26;q=%2Fm%2F0j45p7w%2C%20%2Fm%2F012l1vxv%2C%20%2Fm%2F0t545zt&amp;#x26;geo=JP&amp;#x26;date=1%2F2014%2029m&amp;#x26;cmpt=q&amp;#x26;tz=Etc%2FGMT%2B4&quot;&gt;&lt;img src=&quot;/public/images/blog/2016-07-01/trends-jp.png&quot; alt=&quot;Japan&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Whoa, React has really taken off in the asian market. Even though AngularJS is still
the most looked into framework of the two, the difference is much less dramatic than
in America and Europe, to the point where on April of 2016, they were pretty much neck and neck!&lt;/p&gt;
&lt;p&gt;Around this time, it’s clear that AngularJS got catapulted again when &lt;a href=&quot;https://www.sitepoint.com/whats-new-in-angularjs-2/&quot;&gt;version 2.0&lt;/a&gt;
started to show &lt;a href=&quot;http://thenewstack.io/google-preps-angular-2-final-release/&quot;&gt;signs of maturity&lt;/a&gt;,
but despite React not having a similar overhaul, it’s been creeping in at a steady pace.&lt;/p&gt;
&lt;h3&gt;China&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.google.com/trends/explore#cat=0-5-31&amp;#x26;q=%2Fm%2F0j45p7w%2C%20%2Fm%2F012l1vxv%2C%20%2Fm%2F0t545zt&amp;#x26;geo=CN&amp;#x26;date=1%2F2014%2029m&amp;#x26;cmpt=q&amp;#x26;tz=Etc%2FGMT%2B4&quot;&gt;&lt;img src=&quot;/public/images/blog/2016-07-01/trends-cn.png&quot; alt=&quot;Japan&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Well, hello React a.k.a. Mr. Top Dog. Although the difference is less greater than other regions,
the trend clearly shows that React isn’t slowing down anytime soon. Why is React that much popular
in Asia? I’m pleasantly surprised.&lt;/p&gt;
&lt;h2&gt;What does this mean?&lt;/h2&gt;
&lt;p&gt;Regardless of what your preference is, one thing is certain:
the software development world has embraced client-side frameworks. If you plan on
building applications with a rich user experience for the very demanding users we now have,
you better start learning one of these major frameworks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/docs/ts/latest/guide/&quot;&gt;AngularJS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/getting-started.html&quot;&gt;ReactJS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://guide.meteor.com/&quot;&gt;MeteorJS&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They all have different scopes, so make sure you take a look at all of them
before making your decision!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How do I become a better developer?]]></title><link>https://rafael.do//blog/how-do-i-become-a-better-developer/</link><guid isPermaLink="false">https://rafael.do//blog/how-do-i-become-a-better-developer/</guid><pubDate>Tue, 14 Jun 2016 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
  &lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;#1 answer to &quot;how do I become a better developer?&quot; start a blog. You&apos;ll learn so much + have a reference to all you know, in your own words.&lt;/p&gt;&amp;mdash;
  Todd Motto (@toddmotto) &lt;a href=&quot;https://twitter.com/toddmotto/status/737766510387662848&quot;&gt;May 31, 2016&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content:encoded></item><item><title><![CDATA[Thoughts on giving my first tech talk]]></title><description><![CDATA[On may 25th, I had the opportunity of giving my first ever talk during the event  Python Dominicana 059 . I had been interested in sharing…]]></description><link>https://rafael.do//blog/thoughts-on-giving-my-first-tech-talk/</link><guid isPermaLink="false">https://rafael.do//blog/thoughts-on-giving-my-first-tech-talk/</guid><pubDate>Mon, 13 Jun 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On may 25th, I had the opportunity of giving my first ever talk during the event &lt;a href=&quot;https://www.facebook.com/events/1787153718174739/&quot;&gt;Python Dominicana 059&lt;/a&gt;. I had been interested in sharing with the community for quite some time, but the opportunity finally presented itself when &lt;a href=&quot;https://www.facebook.com/leonardoajim&quot;&gt;Leonardo&lt;/a&gt; -the leader of our local software development communities- suggested a talk on Python or Django.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/images/blog/2016-06-13/fb-leo.png&quot; alt=&quot;Leo proposes a talk!&quot;&gt;&lt;/p&gt;
&lt;p&gt;I immediately felt the rush to decline until I stopped myself and thought: ”&lt;strong&gt;Hey&lt;/strong&gt;, why not?”, and promptly agreed to do so. Despite my interest in public speaking due to my admiration for &lt;a href=&quot;http://www.hanselman.com/&quot;&gt;great speakers&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/watch?v=YTuElM6T50w&quot;&gt;stand-up comedians&lt;/a&gt;, I’m a person that naturally shies away from the limelight, so just by making the decision to share my knowledge, I already felt myself learning from the experience.&lt;/p&gt;
&lt;p&gt;For the next few weeks, I started reading about “content and delivery” and watching conferences from Django Migration’s creator &lt;a href=&quot;https://twitter.com/andrewgodwin&quot;&gt;Andrew Goodwin&lt;/a&gt;, jotting notes and quite frankly, learning way more than I could have imagined.&lt;/p&gt;
&lt;p&gt;Fast forward to the event itself, it was &lt;em&gt;so&lt;/em&gt; much fun. We had a low turn-out which was perfect because it helped the few us there have a conversational tone and focus strictly on the topics that interested the group the most, while at the same time, being more manageable to me.&lt;/p&gt;
&lt;p&gt;Man, I can’t wait to do it again.&lt;/p&gt;
&lt;div&gt;
          &lt;div
            class=&quot;gatsby-resp-iframe-wrapper&quot;
            style=&quot;padding-bottom: 81.5126050420168%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem&quot;
          &gt;
            &lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/rI3XDNnl4AGgJX&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen style=&quot;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
          &quot;&gt; &lt;/iframe&gt;
          &lt;/div&gt;
          &lt;/div&gt;</content:encoded></item><item><title><![CDATA[Managing front end components with Bower]]></title><description><![CDATA[Bower  is a package manager for web applications that allows you to install, update and remove web assets (JavaScript, CSS, fonts, etc.) in…]]></description><link>https://rafael.do//blog/managing-front-end-components-with-bower/</link><guid isPermaLink="false">https://rafael.do//blog/managing-front-end-components-with-bower/</guid><pubDate>Sun, 10 Jan 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; is a package manager for web applications that allows you to install, update and remove web assets (JavaScript, CSS, fonts, etc.) in a consistent manner. Bower also maintains a frequently updated database of all available packages and their corresponding dependencies. &lt;em&gt;Gone&lt;/em&gt; are the days of scavenging libraries throughout the internet for a given library on a specific version.&lt;/p&gt;
&lt;h3&gt;Installing Bower&lt;/h3&gt;
&lt;p&gt;Bower depends on &lt;a href=&quot;https://nodejs.org/&quot;&gt;npm&lt;/a&gt; and &lt;a href=&quot;http://git-scm.com/&quot;&gt;git&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ npm install -g bower&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3&gt;Setting up&lt;/h3&gt;
&lt;p&gt;You can consistently keep track of your setup by creating a &lt;code class=&quot;language-text&quot;&gt;bower.json&lt;/code&gt; file. Bower includes a command for interactively creating it:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ bower init&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3&gt;Searching the repository&lt;/h3&gt;
&lt;p&gt;You can find out which packages are available by either going on the &lt;a href=&quot;http://bower.io/search/&quot;&gt;online registry&lt;/a&gt; or using &lt;a href=&quot;http://bower.io/docs/api/#search&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;bower search&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ bower search &amp;lt;package&amp;gt;
$ bower search jquery&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3&gt;Installing packages&lt;/h3&gt;
&lt;p&gt;Install packages using &lt;a href=&quot;http://bower.io/docs/api/#install&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;bower install&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$ bower install jquery --save
$ bower install jquery#1.12.0 --save&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code class=&quot;language-text&quot;&gt;--save&lt;/code&gt; flag ensures consistency across any device where the bower setup is used by saving any installed dependencies are saved in the &lt;code class=&quot;language-text&quot;&gt;bower.json&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Using packages&lt;/h3&gt;
&lt;p&gt;All packages are stored in &lt;code class=&quot;language-text&quot;&gt;/bower_components/&lt;/code&gt;. First, you’ll want to check with the installed package’s &lt;code class=&quot;language-text&quot;&gt;bower.json&lt;/code&gt; to see which assets are required, as defined by the &lt;code class=&quot;language-text&quot;&gt;main&lt;/code&gt; element.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;jquery&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;2.1.4&amp;quot;,
  &amp;quot;main&amp;quot;: &amp;quot;dist/jquery.js&amp;quot;
}&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Finally, the simplest way to use the downloaded package is to include them directly:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;script src=&amp;quot;/bower_components/jquery/dist/jquery.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
      $(function () {
        alert(&amp;#39;Hello Bower!&amp;#39;);
      });
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;</content:encoded></item><item><title><![CDATA[Basic custom domain hosting with GitHub Pages]]></title><description><![CDATA[GitHub Pages  are hosted free and easily published through  GitHub  or from the command line. Manage your site’s content from GitHub using…]]></description><link>https://rafael.do//blog/basic-custom-domain-hosting-with-github-pages/</link><guid isPermaLink="false">https://rafael.do//blog/basic-custom-domain-hosting-with-github-pages/</guid><pubDate>Wed, 02 Nov 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; are hosted free and easily published through &lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub&lt;/a&gt; or from the command line. Manage your site’s content from GitHub using the tools and workflow that you’re familiar with, so you won’t skip a beat. More about publishing with &lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;[Update] This post is outdated.&lt;/strong&gt; For the latest instructions, see the official &lt;a href=&quot;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&quot;&gt;GitHub guide&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A third-party content editor is Development Seed’s wonderful &lt;a href=&quot;http://prose.io/&quot;&gt;Prose&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;GitHub setup&lt;/h2&gt;
&lt;p&gt;After creating your &lt;a href=&quot;https://github.com/new&quot;&gt;GitHub repository&lt;/a&gt;, you need to create a file named &lt;code class=&quot;language-text&quot;&gt;CNAME&lt;/code&gt; in your root directory and fill its contents &lt;a href=&quot;https://github.com/rebelliard/rebelliard.github.com/blob/master/CNAME&quot;&gt;with your domain&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Domain setup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create an &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt; record with the &lt;code class=&quot;language-text&quot;&gt;204.232.175.78&lt;/code&gt; address as value.&lt;/li&gt;
&lt;li&gt;Create an &lt;code class=&quot;language-text&quot;&gt;CNAME&lt;/code&gt; record with &lt;code class=&quot;language-text&quot;&gt;www&lt;/code&gt; as name and &lt;code class=&quot;language-text&quot;&gt;example.github.com&lt;/code&gt; as value.&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Microsoft Natural Ergonomic Keyboard 4000's zoom slider on Ubuntu 12.10]]></title><description><![CDATA[For the past two years, I have been using the excellent  Microsoft Natural Ergonomic Keyboard 4000  almost exclusively. This keyboard has a…]]></description><link>https://rafael.do//blog/enabling-scrolling-using-the-microsoft-natural-ergonomic-keyboard-4000s-zoom-slider-on-ubuntu-1210/</link><guid isPermaLink="false">https://rafael.do//blog/enabling-scrolling-using-the-microsoft-natural-ergonomic-keyboard-4000s-zoom-slider-on-ubuntu-1210/</guid><pubDate>Wed, 02 Nov 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;For the past two years, I have been using the excellent &lt;a href=&quot;https://www.amazon.com/Microsoft-Natural-Ergonomic-Keyboard-4000/dp/B000A6PPOK&quot;&gt;Microsoft Natural Ergonomic Keyboard 4000&lt;/a&gt; almost exclusively. This keyboard has a zoom slider in between the two main keys section that I just never use. I don’t understand what the reasoning behind having a zoom slider instead of a vertical slider, but today we’ll fix that for Ubuntu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/images/blog/2011-11-02/microsoft-keyboard-4000.jpg&quot; alt=&quot;Microsoft Natural Ergonomic Keyboard 4000&quot;&gt;&lt;/p&gt;
&lt;p&gt;Open the &lt;code class=&quot;language-text&quot;&gt;/lib/udev/rules.d/95-keymap.rules&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /lib/udev/rules.d/95-keymap.rules&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Let’s find the line that starts with &lt;code class=&quot;language-text&quot;&gt;ENV{ID_VENDOR}==&amp;quot;Microsoft&amp;quot;&lt;/code&gt;. On my setup, it looks like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ENV&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ID_VENDOR&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;, ENV&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ID_MODEL_ID&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;00db&quot;&lt;/span&gt;, RUN+&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;keymap &lt;span class=&quot;token variable&quot;&gt;$name&lt;/span&gt; 0xc022d zoomin 0xc022e zoomout&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Replace the &lt;code class=&quot;language-text&quot;&gt;zoomin&lt;/code&gt; value with &lt;code class=&quot;language-text&quot;&gt;pageup&lt;/code&gt; and the &lt;code class=&quot;language-text&quot;&gt;zoomout&lt;/code&gt; value with &lt;code class=&quot;language-text&quot;&gt;pagedown&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ENV&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ID_VENDOR&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;, ENV&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ID_MODEL_ID&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;00db&quot;&lt;/span&gt;, RUN+&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;keymap &lt;span class=&quot;token variable&quot;&gt;$name&lt;/span&gt; 0xc022d pageup 0xc022e pagedown&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;After restarting your computer, your scrolling keys should now work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Heads up!&lt;/strong&gt; This tip has been tested on &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_12.10_.28Quantal_Quetzal.29&quot;&gt;Ubuntu 12.10&lt;/a&gt;.&lt;/p&gt;</content:encoded></item></channel></rss>