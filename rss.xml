<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Rafael Belliard - Software developer]]></title><description><![CDATA[My personal site.]]></description><link>https://rafael.do/</link><generator>RSS for Node</generator><lastBuildDate>Wed, 25 Apr 2018 01:47:37 GMT</lastBuildDate><item><title><![CDATA[Integrating AngularJS with Django]]></title><description><![CDATA[In 3 steps, you can easily setup a single-page application with an  AngularJS  frontend and backed by the  Django Framework : Setup Django‚Ä¶]]></description><link>https://rafael.do//blog/integrating-angularjs-django/</link><guid isPermaLink="false">https://rafael.do//blog/integrating-angularjs-django/</guid><pubDate>Mon, 08 Aug 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;In 3 steps, you can easily setup a single-page application with an &lt;a href=&quot;https://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; frontend and backed by the &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django Framework&lt;/a&gt;:&lt;/p&gt;
&lt;h2&gt;Setup Django&lt;/h2&gt;
&lt;p&gt;On your Django‚Äôs &lt;code class=&quot;language-text&quot;&gt;urls.py&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;urlpatterns = patterns(&amp;quot;&amp;quot;,
    (&amp;quot;^admin/&amp;quot;, include(admin.site.urls)),

    # Handle all other URLs via AngularJS.
    url(r&amp;#39;^.*$&amp;#39;, TemplateView.as_view(
      template_name=&amp;quot;index.html&amp;quot;), name=&amp;quot;home&amp;quot;
    ),
)&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3&gt;Mezzanine&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[Optional] If you want to integrate AngularJS with the &lt;a href=&quot;http://mezzanine.jupo.org/&quot;&gt;Django‚Äôs Mezzanine CMS&lt;/a&gt;, make sure Mezzanine‚Äôs routes are defined &lt;strong&gt;before&lt;/strong&gt; AngularJS‚Äô catch-all ‚Äúhome‚Äù route:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;urlpatterns = patterns(&amp;quot;&amp;quot;,
    (&amp;quot;^admin/&amp;quot;, include(admin.site.urls)),

    # Mezzanine pages.
    (&amp;quot;^&amp;quot;, include(&amp;quot;mezzanine.urls&amp;quot;)),

    # Handle all other URLs via AngularJS.
    url(r&amp;#39;^.*$&amp;#39;, TemplateView.as_view(
      template_name=&amp;quot;index.html&amp;quot;), name=&amp;quot;home&amp;quot;
    ),
)&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Setup AngularJS&lt;/h2&gt;
&lt;p&gt;Enable HTML5 Mode in your AngularJS configuration module:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;angular.module(&amp;#39;app&amp;#39;).config(
  function ($routeProvider, locationProvider) {
    $routeProvider
      .when(&amp;#39;/&amp;#39;, {
        templateUrl: &amp;#39;/static/app/views/home.html&amp;#39;,
      })
      .when(&amp;#39;/profile/:profileId&amp;#39;, {
        templateUrl: &amp;#39;/static/app/views/profile.html&amp;#39;,
        controller: &amp;#39;ProfileCtrl&amp;#39;
      })
      .otherwise({
        redirectTo: &amp;#39;/&amp;#39;
      });

      $locationProvider.html5Mode(true);
    });
  }
);&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;This also works with the &lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Setup the HTML&lt;/h2&gt;
&lt;p&gt;Set the &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/HTML/Element/base&quot;&gt;base&lt;/a&gt; tag in your main &lt;code class=&quot;language-text&quot;&gt;index.html&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html class=&amp;quot;no-js&amp;quot; ng-app=&amp;quot;app&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;!-- HTML5 Mode. --&amp;gt;
    &amp;lt;base href=&amp;quot;/&amp;quot;&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;!-- etc --&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;These three steps will enable AngularJS to handle your application‚Äôs frontend and Django to take care of the backend. Before deploying to production, make sure you have a proper strategy for serving &lt;a href=&quot;https://docs.djangoproject.com/en/1.10/howto/static-files/deployment/#serving-static-files-in-production&quot;&gt;static files in production&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Read more&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ngmilk.rocks/2015/03/09/angularjs-html5-mode-or-pretty-urls-on-apache-using-htaccess/&quot;&gt;Angular HTML5 mode or pretty URLs on Apache (using htaccess)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[8 tips to become an effective remote developer]]></title><description><![CDATA[For you to evolve as a developer, you need to be a self-starter and make it a point to keep yourself active and in constant state of‚Ä¶]]></description><link>https://rafael.do//blog/8-tips-to-become-an-effective-remote-developer/</link><guid isPermaLink="false">https://rafael.do//blog/8-tips-to-become-an-effective-remote-developer/</guid><pubDate>Thu, 28 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;For you to evolve as a developer, you need to be a self-starter and make it a point to keep yourself active and in constant state of learning. Here are some ways you can do it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.codementor.io/learn-programming/8-tips-to-become-an-effective-remote-developer&quot;&gt;Codementor: 8 Tips to Become an Effective Remote Developer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Response to my interpretation of React's ‚ÄúDesign Principles‚Äù]]></title><description><![CDATA[Yesterday, I shared  how concerned  I was with React‚Äôs
 Design Principles .
Today, I‚Äôd like to share the response I received from  @dan‚Ä¶]]></description><link>https://rafael.do//blog/response-to-react-design-principles-interpretation-by-react-members/</link><guid isPermaLink="false">https://rafael.do//blog/response-to-react-design-principles-interpretation-by-react-members/</guid><pubDate>Sat, 16 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Yesterday, I shared &lt;a href=&quot;react-driven-by-facebook-principle-concerns&quot;&gt;how concerned&lt;/a&gt; I was with React‚Äôs
&lt;a href=&quot;https://facebook.github.io/react/contributing/design-principles.html&quot;&gt;Design Principles&lt;/a&gt;.
Today, I‚Äôd like to share the response I received from &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;@dan_abramov&lt;/a&gt;
‚Äîa member of the React team‚Äî regarding my interpretation of these principles.&lt;/p&gt;
&lt;p&gt;I hope this helps anyone who felt as conflicted as I did.&lt;/p&gt;
&lt;h2&gt;Response&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; That Facebook heavily uses React in production (unlike Parse) is exactly why I think community can bet on it.&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754278530817617921&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; Community is obviously important but ultimately projects with business value are those that companies keep developing.&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754278857331662848&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; So on the contrary, I think you should have been concerned if Facebook didn&amp;#39;t use React and maintained it for image purposes üòâ&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754279261805109248&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; There is also some sort of misunderstanding here. Post says ‚Äúboth externally and internally‚Äù. &lt;a href=&quot;https://t.co/ku7DG0j5S0&quot;&gt;pic.twitter.com/ku7DG0j5S0&lt;/a&gt;&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754280725076119552&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; ‚ÄúExternally‚Äù *is* the community. Sorry if this wasn‚Äôt clear. I can change the wording to be more direct.&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754281037891592192&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; I wrote a comment&lt;/p&gt;&amp;mdash; Dan Abramov (@dan_abramov) &lt;a href=&quot;https://twitter.com/dan_abramov/status/754285961845022720&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The comment can be read &lt;a href=&quot;react-driven-by-facebook-principle-concerns#comment-2786435370&quot;&gt;here&lt;/a&gt;.
It‚Äôs good stuff.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;About Parse&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;@dan_abramov&lt;/a&gt; Parse servers will be decommissioned in a year and the entire stack was made open source so you can run your own&lt;/p&gt;&amp;mdash; Vjeux (@Vjeux) &lt;a href=&quot;https://twitter.com/Vjeux/status/754317380386304004&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/rebelliard&quot;&gt;@rebelliard&lt;/a&gt; &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;@dan_abramov&lt;/a&gt; I&amp;#39;ve rarely seen such a graceful shut down of a service before&lt;/p&gt;&amp;mdash; Vjeux (@Vjeux) &lt;a href=&quot;https://twitter.com/Vjeux/status/754317595143049222&quot;&gt;July 16, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;h2&gt;Closing thoughts&lt;/h2&gt;
&lt;p&gt;
  &lt;img src=&quot;/public/images/blog/2016-07-16/not-even-mad.jpg&quot; height=&quot;185&quot; alt=&quot;That&apos;s amazing.&quot;&gt;
&lt;/p&gt;
&lt;p&gt;I thank &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;@dan_abramov&lt;/a&gt; for taking the time to clarify what they meant.
It certainly didn‚Äôt occur to me that they kept an ear to the ground and I could &lt;em&gt;just ask&lt;/em&gt;,
which gives me a sense of relief and quite frankly, makes me &lt;strong&gt;even more&lt;/strong&gt; interested
in the library than I previously was.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/dan_abramov/status/754278530817617921&quot;&gt;Response&lt;/a&gt; on Twitter.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;react-driven-by-facebook-principle-concerns#comment-2786435370&quot;&gt;Response&lt;/a&gt; to my original post.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/pull/7292/files&quot;&gt;Changeset&lt;/a&gt; &lt;em&gt;further&lt;/em&gt; clarifying
the original article.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[React's ‚ÄúDriven by Facebook‚Äù principle concerns me]]></title><description><![CDATA[Facebook just released  React Design Principles , an article in which they share a few concepts that guide the library‚Äôs development. I was‚Ä¶]]></description><link>https://rafael.do//blog/react-driven-by-facebook-principle-concerns/</link><guid isPermaLink="false">https://rafael.do//blog/react-driven-by-facebook-principle-concerns/</guid><pubDate>Fri, 15 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote class=&quot;bg-warning&quot;&gt;
  &lt;p&gt;
    &lt;b&gt;Update:&lt;/b&gt;
    I&apos;ve posted an &lt;a href=&quot;response-to-react-design-principles-interpretation-by-react-members&quot;&gt;update&lt;/a&gt;
    based on the response I received from &lt;a href=&quot;https://twitter.com/dan_abramov&quot;&gt;a member&lt;/a&gt;
    of the React team. Also, make sure you read his commment &lt;a href=&quot;#comment-2786435370&quot;&gt;below&lt;/a&gt;.
    (2016-07-16)
  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Facebook just released &lt;a href=&quot;https://facebook.github.io/react/contributing/design-principles.html&quot;&gt;React Design Principles&lt;/a&gt;, an article in which they share a few concepts that guide the library‚Äôs development. I was feeling assured by the decision-making that drives it, until I was reminded to always keep my chin down and my guard up.&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Hot off the press: React Design Principles. We hope that contributors to React will find them useful! &lt;a href=&quot;https://t.co/93wr0tAXSZ&quot;&gt;https://t.co/93wr0tAXSZ&lt;/a&gt;&lt;/p&gt;&amp;mdash; React (@reactjs) &lt;a href=&quot;https://twitter.com/reactjs/status/753677502309072897&quot;&gt;July 14, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;h2&gt;The good&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;React is pragmatic. [‚Ä¶] If we want to deprecate a pattern that we don‚Äôt like, it is our responsibility to consider all existing use cases for it and educate the community about the alternatives before we deprecate it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It doesn‚Äôt get better than this. As a &lt;a href=&quot;https://medium.com/@ericclemmons/javascript-fatigue-48d4011b6fc4&quot;&gt;fatigued developer&lt;/a&gt;, it‚Äôs good to know they have my back.&lt;/p&gt;
&lt;h2&gt;The strange&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;We value API stability because at Facebook we have more than 20 thousand components using React. This means that we are reluctant to change public APIs or behavior because teams depend on it both externally and internally.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I found the phrasing in this statement odd, as it can be implied that the reason why the API is stable is almost exclusively because of its internal usage and not because &lt;a href=&quot;http://www.theregister.co.uk/2016/03/23/npm_left_pad_chaos/&quot;&gt;stability matters&lt;/a&gt; to the hundreds of thousands of developers implementing the library. I braced myself.&lt;/p&gt;
&lt;h2&gt;The frightening&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Ultimately React is driven by the needs of Facebook. We are more likely to spend time and energy on issues with React that people using it at Facebook are experiencing internally.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It makes sense that attention is given to ensure their platform provides a pleasant experience to its gigantic user base, while rolling out tools that benefit the rest of the world. However, I was immediately reminded of how shocking it was when they decided to shutdown it‚Äôs fantastic ‚ÄúParse‚Äù backend as a service platform and leave a myriad of businesses scrambling for their lives. As &lt;a href=&quot;https://techcrunch.com/2016/01/28/facebook-shutters-its-parse-developer-platform/&quot;&gt;TechChrunch.com&lt;/a&gt; remarked:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The situation harkens back to the dark days of developer whiplash on Facebook‚Äôs web games platform, circa 2009. Facebook frequently made significant changes to what developers could do and how virality worked with little notice. That left developers with broken apps and lost business potential they were depending on.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Let‚Äôs ride the wave&lt;/h2&gt;
&lt;p&gt;Am I concerned that Facebook will ‚Äúmove my cheese‚Äù? I‚Äôm not. React is a wonderful library with a growing user base and I‚Äôm invested in it more so than any other out there.&lt;/p&gt;
&lt;p&gt;In spite of this, when I remember the company‚Äôs cutthroat history, I read between the lines and understand that that if React‚Äôs direction suddenly misaligns with that of the community‚Äôs, we played ourselves.&lt;/p&gt;
&lt;p&gt;As George Orwell famously wrote on &lt;a href=&quot;https://www.amazon.com/Animal-Farm-Anniversary-George-Orwell/dp/0451526341/&quot;&gt;‚ÄúAnimal Farm‚Äù&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All animals are equal but some animals are more equal than others.&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[Introduction to greedy algorithms]]></title><description><![CDATA[Greedy algorithms are good at finding solutions to problems by choosing a consistently optimal solution on each step. Basic concepts An‚Ä¶]]></description><link>https://rafael.do//blog/introduction-greedy-algorithms/</link><guid isPermaLink="false">https://rafael.do//blog/introduction-greedy-algorithms/</guid><pubDate>Mon, 11 Jul 2016 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Greedy algorithms are good at finding solutions to problems by choosing a consistently optimal solution on each step.&lt;/p&gt;
&lt;h2&gt;Basic concepts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An &lt;strong&gt;optimal solution&lt;/strong&gt; is a feasible solution with the largest (or smallest) objective function value.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;local optimum&lt;/strong&gt; can be obtained by finding the optimal solution within a neighboring set of candidate solutions.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;global optimum&lt;/strong&gt; can be obtained by finding the optimal solutions among all possible solutions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Problem characteristics&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Greedy choice property&lt;/strong&gt;: a global optimum can be obtained by the selection of a local optimum.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optimal substructure&lt;/strong&gt;: a global optimum can be obtained by using the local optimum of its subproblems.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;General strategies&lt;/h2&gt;
&lt;h3&gt;‚ÄúGreedy stays ahead‚Äù arguments&lt;/h3&gt;
&lt;p&gt;Using ‚ÄúGreedy stays ahead‚Äù strategy, the algorithm is always at least as far ahead as the optimal solution of each iteration.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Define your solutions.&lt;/strong&gt; Define what object will represent the global optimum, and what form each local optimum takes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Find a measure.&lt;/strong&gt; Find a series of measurements to ensure your algorithm stays ahead of the local optimums you‚Äôve found.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Proove greedy stays ahead.&lt;/strong&gt; &lt;em&gt;Inductively&lt;/em&gt; show that the local optimums are as good as any of the solution‚Äôs measures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Mathematical induction:&lt;/em&gt; a means of proving a theorem by showing that if it is true of any particular case, it is true of the next case in a series, and then showing that it is indeed true in one particular case.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Prove optimality.&lt;/strong&gt; By &lt;em&gt;contradiction&lt;/em&gt;, prove that since the algorithm stays ahead of its previous measures, it must produce an optimal solution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Mathematical proof by contradiction:&lt;/em&gt; assume that a statement is not true and then to show that that assumption leads to a contradiction. In the case of trying to prove this is equivalent to assuming that That is, to assume that is true and is false.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Exchange arguments&lt;/h3&gt;
&lt;p&gt;The greedy exchange strategy is used to prove the correctness of greedy algorithms by transforming the global optimum iteratively without worsening its quality.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Define your solutions.&lt;/strong&gt; Define an object &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt; that will represent the global optimum and an object &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; that represents a local optimum.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compare solutions.&lt;/strong&gt; Show that if the global optimum is not the same as the local optimum, either:&lt;/li&gt;
&lt;li&gt;There is an element in &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; that is not in &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;There are two elements of &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; that are in a different order in &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exchange pieces.&lt;/strong&gt; Gradually modify the local optimum &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; until it is the same as the algorithm‚Äôs global optimum &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Iterate.&lt;/strong&gt; Decrease the number of differences between &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt;, until you can turn &lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt; into &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; without worsening the quality of the solution. Inductively, &lt;code class=&quot;language-text&quot;&gt;O&lt;/code&gt; must be optimal.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Example: Change-making problem&lt;/h2&gt;
&lt;p&gt;This &lt;a href=&quot;https://en.wikipedia.org/wiki/Change-making_problem&quot;&gt;classical problem&lt;/a&gt; addresses the following question: How can a given amount of money be made with the least number of coins of given denominations 1, 5, 10 and 25?&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Input:
  37

Output:
  4

Explanation:
  37 = 25 + 10 + 1 + 1&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Implementation in Python:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def change_making_problem(n):
    count = 0
    for coin in [25, 10, 5, 1]:
        # Largest coin not greater
        # than the remaining amount.
        while n &amp;gt;= coin:
            count += 1
            n -= coin
    return count&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;h3&gt;Read more&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://web.stanford.edu/class/archive/cs/cs161/cs161.1138/handouts/120%20Guide%20to%20Greedy%20Algorithms.pdf&quot;&gt;Guide to Greedy Algorithms&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.cornell.edu/courses/cs482/2004su/handouts/greedy_ahead.pdf&quot;&gt;Proof Techniques: Greedy Stays Ahead&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cs.cornell.edu/courses/cs482/2003su/handouts/greedy_exchange.pdf&quot;&gt;Proof Techniques: Greedy Exchange&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[How do I become a better developer?]]></title><link>https://rafael.do//blog/how-do-i-become-a-better-developer/</link><guid isPermaLink="false">https://rafael.do//blog/how-do-i-become-a-better-developer/</guid><pubDate>Tue, 14 Jun 2016 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;
  &lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;#1 answer to &quot;how do I become a better developer?&quot; start a blog. You&apos;ll learn so much + have a reference to all you know, in your own words.&lt;/p&gt;&amp;mdash;
  Todd Motto (@toddmotto) &lt;a href=&quot;https://twitter.com/toddmotto/status/737766510387662848&quot;&gt;May 31, 2016&lt;/a&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[Microsoft Natural Ergonomic Keyboard 4000's zoom slider on Ubuntu 12.10]]></title><description><![CDATA[For the past two years, I have been using the excellent  Microsoft Natural Ergonomic Keyboard 4000  almost exclusively. This keyboard has a‚Ä¶]]></description><link>https://rafael.do//blog/enabling-scrolling-using-the-microsoft-natural-ergonomic-keyboard-4000s-zoom-slider-on-ubuntu-1210/</link><guid isPermaLink="false">https://rafael.do//blog/enabling-scrolling-using-the-microsoft-natural-ergonomic-keyboard-4000s-zoom-slider-on-ubuntu-1210/</guid><pubDate>Wed, 02 Nov 2011 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;For the past two years, I have been using the excellent &lt;a href=&quot;https://www.amazon.com/Microsoft-Natural-Ergonomic-Keyboard-4000/dp/B000A6PPOK&quot;&gt;Microsoft Natural Ergonomic Keyboard 4000&lt;/a&gt; almost exclusively. This keyboard has a zoom slider in between the two main keys section that I just never use. I don‚Äôt understand what the reasoning behind having a zoom slider instead of a vertical slider, but today we‚Äôll fix that for Ubuntu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/public/images/blog/2011-11-02/microsoft-keyboard-4000.jpg&quot; alt=&quot;Microsoft Natural Ergonomic Keyboard 4000&quot;&gt;&lt;/p&gt;
&lt;p&gt;Open the &lt;code class=&quot;language-text&quot;&gt;/lib/udev/rules.d/95-keymap.rules&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /lib/udev/rules.d/95-keymap.rules&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Let‚Äôs find the line that starts with &lt;code class=&quot;language-text&quot;&gt;ENV{ID_VENDOR}==&amp;quot;Microsoft&amp;quot;&lt;/code&gt;. On my setup, it looks like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ENV&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ID_VENDOR&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;, ENV&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ID_MODEL_ID&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;00db&quot;&lt;/span&gt;, RUN+&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;keymap &lt;span class=&quot;token variable&quot;&gt;$name&lt;/span&gt; 0xc022d zoomin 0xc022e zoomout&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;Replace the &lt;code class=&quot;language-text&quot;&gt;zoomin&lt;/code&gt; value with &lt;code class=&quot;language-text&quot;&gt;pageup&lt;/code&gt; and the &lt;code class=&quot;language-text&quot;&gt;zoomout&lt;/code&gt; value with &lt;code class=&quot;language-text&quot;&gt;pagedown&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot;&gt;
      &lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;ENV&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ID_VENDOR&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Microsoft&quot;&lt;/span&gt;, ENV&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;ID_MODEL_ID&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;00db&quot;&lt;/span&gt;, RUN+&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;keymap &lt;span class=&quot;token variable&quot;&gt;$name&lt;/span&gt; 0xc022d pageup 0xc022e pagedown&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
&lt;p&gt;After restarting your computer, your scrolling keys should now work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Heads up!&lt;/strong&gt; This tip has been tested on &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_12.10_.28Quantal_Quetzal.29&quot;&gt;Ubuntu 12.10&lt;/a&gt;.&lt;/p&gt;</content:encoded></item></channel></rss>